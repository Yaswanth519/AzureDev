{
	"name": "L6_excel",
	"properties": {
		"activities": [
			{
				"name": "Lookup_excel",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[get_job_dtls]",
						"storedProcedureParameters": {
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Trigger",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Az_SQL_DB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "sp_start_log_entry",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Lookup_excel",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[start_log_entry]",
					"storedProcedureParameters": {
						"jobid": {
							"value": {
								"value": "@activity('Lookup_excel').output.firstRow.jobid",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipeline_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_Az_SQL_DB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy_excel",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "sp_start_log_entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Excel1",
						"type": "DatasetReference",
						"parameters": {
							"blob_storage_acc_loc": {
								"value": "@activity('Lookup_excel').output.firstRow.SourceAccount",
								"type": "Expression"
							},
							"file": {
								"value": "@activity('Lookup_excel').output.firstRow.Sourcefile",
								"type": "Expression"
							},
							"sheetname": {
								"value": "@activity('Lookup_excel').output.firstRow.sheetname",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Parquet_ADLS_csv",
						"type": "DatasetReference",
						"parameters": {
							"adls_storage_acc_loc": {
								"value": "@activity('Lookup_excel').output.firstRow.TargetAccount",
								"type": "Expression"
							},
							"directory": {
								"value": "@activity('Lookup_excel').output.firstRow.tgt_dir",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "sp_end_success_log_entry",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_excel",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[end_log_entry]",
					"storedProcedureParameters": {
						"error": {
							"value": "",
							"type": "String"
						},
						"jobid": {
							"value": {
								"value": "@activity('Lookup_excel').output.firstRow.jobid",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipeline_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_Az_SQL_DB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "sp_end_fail_log_entry",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_excel",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[end_log_entry]",
					"storedProcedureParameters": {
						"error": {
							"value": {
								"value": "@activity('Copy_excel').output.error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"jobid": {
							"value": {
								"value": "@activity('Lookup_excel').output.firstRow.jobid",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipeline_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_Az_SQL_DB",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Trigger": {
				"type": "string"
			}
		},
		"variables": {
			"mapping": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-08-09T17:47:04Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}